(************************************************)
(*       AUTOGENERATED FILE - DO NOT EDIT!      *)
(************************************************)
(* Generated by: ocaml-protoc-plugin            *)
(* https://github.com/issuu/ocaml-protoc-plugin *)
(************************************************)
(*
   Source: jsonrpc.proto
   Syntax: proto3 
   Parameters:
     annot='[@@deriving eq, show, protocol ~driver:(module Protocol_conv_json.Json)]'
     debug=false
     opens=[]
     int64_as_int=true
     int32_as_int=true
     fixed_as_int=false
     singleton_record=false
*)
module rec Request : sig
  val name': unit -> string
  type t = { jsonrpc: string; id: string; method': string; params: [ `KeymapGetRequest of Keymap.Keymap.GetRequest.t | `KeymapReloadRequest of Keymap.Keymap.ReloadRequest.t | `KeymapStoreRequest of Keymap.Keymap.StoreRequest.t | `FilerMakeRequest of Filer.Filer.MakeRequest.t | `FilerGetRequest of Filer.Filer.GetRequest.t | `FilerMoveParentRequest of Filer.Filer.MoveParentRequest.t | `FilerEnterDirectoryRequest of Filer.Filer.EnterDirectoryRequest.t | `FilerToggleMarkRequest of Filer.Filer.ToggleMarkRequest.t | `FilerMoveRequest of Filer.Filer.MoveRequest.t | `FilerDeleteRequest of Filer.Filer.DeleteRequest.t | `FilerCopyRequest of Filer.Filer.CopyRequest.t | `FilerJumpLocationRequest of Filer.Filer.JumpLocationRequest.t | `ConfigurationGetRequest of Configuration.Configuration.GetRequest.t | `ConfigurationStoreRequest of Configuration.Configuration.StoreRequest.t | `CompletionSetupRequest of Completion.Completion.SetupRequest.t | `CompletionReadRequest of Completion.Completion.ReadRequest.t | `BookmarkListAllRequest of Bookmark.Bookmark.ListAllRequest.t | `BookmarkRegisterRequest of Bookmark.Bookmark.RegisterRequest.t | `BookmarkDeleteRequest of Bookmark.Bookmark.DeleteRequest.t | `TaskSendReplyRequest of Task.Task.SendReplyRequest.t | `TaskCancelRequest of Task.Task.CancelRequest.t ] } [@@deriving eq, show, protocol ~driver:(module Protocol_conv_json.Json)]
  val to_proto: t -> Ocaml_protoc_plugin.Writer.t
  val from_proto: Ocaml_protoc_plugin.Reader.t -> t Ocaml_protoc_plugin.Result.t
end = struct 
  let name' () = "Jsonrpc.Request"
  type t = { jsonrpc: string; id: string; method': string; params: [ `KeymapGetRequest of Keymap.Keymap.GetRequest.t | `KeymapReloadRequest of Keymap.Keymap.ReloadRequest.t | `KeymapStoreRequest of Keymap.Keymap.StoreRequest.t | `FilerMakeRequest of Filer.Filer.MakeRequest.t | `FilerGetRequest of Filer.Filer.GetRequest.t | `FilerMoveParentRequest of Filer.Filer.MoveParentRequest.t | `FilerEnterDirectoryRequest of Filer.Filer.EnterDirectoryRequest.t | `FilerToggleMarkRequest of Filer.Filer.ToggleMarkRequest.t | `FilerMoveRequest of Filer.Filer.MoveRequest.t | `FilerDeleteRequest of Filer.Filer.DeleteRequest.t | `FilerCopyRequest of Filer.Filer.CopyRequest.t | `FilerJumpLocationRequest of Filer.Filer.JumpLocationRequest.t | `ConfigurationGetRequest of Configuration.Configuration.GetRequest.t | `ConfigurationStoreRequest of Configuration.Configuration.StoreRequest.t | `CompletionSetupRequest of Completion.Completion.SetupRequest.t | `CompletionReadRequest of Completion.Completion.ReadRequest.t | `BookmarkListAllRequest of Bookmark.Bookmark.ListAllRequest.t | `BookmarkRegisterRequest of Bookmark.Bookmark.RegisterRequest.t | `BookmarkDeleteRequest of Bookmark.Bookmark.DeleteRequest.t | `TaskSendReplyRequest of Task.Task.SendReplyRequest.t | `TaskCancelRequest of Task.Task.CancelRequest.t ] } [@@deriving eq, show, protocol ~driver:(module Protocol_conv_json.Json)]
  let to_proto = 
    let apply = fun ~f:f' { jsonrpc; id; method'; params } -> f' jsonrpc id method' params in
    let spec = Ocaml_protoc_plugin.Serialize.C.( basic (1, string, proto3) ^:: basic (2, string, proto3) ^:: basic (3, string, proto3) ^:: oneof ((function `KeymapGetRequest v -> oneof_elem (4, (message Keymap.Keymap.GetRequest.to_proto), v) | `KeymapReloadRequest v -> oneof_elem (5, (message Keymap.Keymap.ReloadRequest.to_proto), v) | `KeymapStoreRequest v -> oneof_elem (6, (message Keymap.Keymap.StoreRequest.to_proto), v) | `FilerMakeRequest v -> oneof_elem (7, (message Filer.Filer.MakeRequest.to_proto), v) | `FilerGetRequest v -> oneof_elem (8, (message Filer.Filer.GetRequest.to_proto), v) | `FilerMoveParentRequest v -> oneof_elem (9, (message Filer.Filer.MoveParentRequest.to_proto), v) | `FilerEnterDirectoryRequest v -> oneof_elem (10, (message Filer.Filer.EnterDirectoryRequest.to_proto), v) | `FilerToggleMarkRequest v -> oneof_elem (11, (message Filer.Filer.ToggleMarkRequest.to_proto), v) | `FilerMoveRequest v -> oneof_elem (12, (message Filer.Filer.MoveRequest.to_proto), v) | `FilerDeleteRequest v -> oneof_elem (13, (message Filer.Filer.DeleteRequest.to_proto), v) | `FilerCopyRequest v -> oneof_elem (14, (message Filer.Filer.CopyRequest.to_proto), v) | `FilerJumpLocationRequest v -> oneof_elem (15, (message Filer.Filer.JumpLocationRequest.to_proto), v) | `ConfigurationGetRequest v -> oneof_elem (16, (message Configuration.Configuration.GetRequest.to_proto), v) | `ConfigurationStoreRequest v -> oneof_elem (17, (message Configuration.Configuration.StoreRequest.to_proto), v) | `CompletionSetupRequest v -> oneof_elem (18, (message Completion.Completion.SetupRequest.to_proto), v) | `CompletionReadRequest v -> oneof_elem (19, (message Completion.Completion.ReadRequest.to_proto), v) | `BookmarkListAllRequest v -> oneof_elem (20, (message Bookmark.Bookmark.ListAllRequest.to_proto), v) | `BookmarkRegisterRequest v -> oneof_elem (21, (message Bookmark.Bookmark.RegisterRequest.to_proto), v) | `BookmarkDeleteRequest v -> oneof_elem (22, (message Bookmark.Bookmark.DeleteRequest.to_proto), v) | `TaskSendReplyRequest v -> oneof_elem (23, (message Task.Task.SendReplyRequest.to_proto), v) | `TaskCancelRequest v -> oneof_elem (24, (message Task.Task.CancelRequest.to_proto), v))) ^:: nil ) in
    let serialize = Ocaml_protoc_plugin.Serialize.serialize (spec) in
    fun t -> apply ~f:(serialize ()) t
  
  let from_proto = 
    let constructor = fun jsonrpc id method' params -> { jsonrpc; id; method'; params } in
    let spec = Ocaml_protoc_plugin.Deserialize.C.( basic (1, string, proto3) ^:: basic (2, string, proto3) ^:: basic (3, string, proto3) ^:: oneof ([ oneof_elem (4, (message Keymap.Keymap.GetRequest.from_proto), fun v -> `KeymapGetRequest v); oneof_elem (5, (message Keymap.Keymap.ReloadRequest.from_proto), fun v -> `KeymapReloadRequest v); oneof_elem (6, (message Keymap.Keymap.StoreRequest.from_proto), fun v -> `KeymapStoreRequest v); oneof_elem (7, (message Filer.Filer.MakeRequest.from_proto), fun v -> `FilerMakeRequest v); oneof_elem (8, (message Filer.Filer.GetRequest.from_proto), fun v -> `FilerGetRequest v); oneof_elem (9, (message Filer.Filer.MoveParentRequest.from_proto), fun v -> `FilerMoveParentRequest v); oneof_elem (10, (message Filer.Filer.EnterDirectoryRequest.from_proto), fun v -> `FilerEnterDirectoryRequest v); oneof_elem (11, (message Filer.Filer.ToggleMarkRequest.from_proto), fun v -> `FilerToggleMarkRequest v); oneof_elem (12, (message Filer.Filer.MoveRequest.from_proto), fun v -> `FilerMoveRequest v); oneof_elem (13, (message Filer.Filer.DeleteRequest.from_proto), fun v -> `FilerDeleteRequest v); oneof_elem (14, (message Filer.Filer.CopyRequest.from_proto), fun v -> `FilerCopyRequest v); oneof_elem (15, (message Filer.Filer.JumpLocationRequest.from_proto), fun v -> `FilerJumpLocationRequest v); oneof_elem (16, (message Configuration.Configuration.GetRequest.from_proto), fun v -> `ConfigurationGetRequest v); oneof_elem (17, (message Configuration.Configuration.StoreRequest.from_proto), fun v -> `ConfigurationStoreRequest v); oneof_elem (18, (message Completion.Completion.SetupRequest.from_proto), fun v -> `CompletionSetupRequest v); oneof_elem (19, (message Completion.Completion.ReadRequest.from_proto), fun v -> `CompletionReadRequest v); oneof_elem (20, (message Bookmark.Bookmark.ListAllRequest.from_proto), fun v -> `BookmarkListAllRequest v); oneof_elem (21, (message Bookmark.Bookmark.RegisterRequest.from_proto), fun v -> `BookmarkRegisterRequest v); oneof_elem (22, (message Bookmark.Bookmark.DeleteRequest.from_proto), fun v -> `BookmarkDeleteRequest v); oneof_elem (23, (message Task.Task.SendReplyRequest.from_proto), fun v -> `TaskSendReplyRequest v); oneof_elem (24, (message Task.Task.CancelRequest.from_proto), fun v -> `TaskCancelRequest v) ]) ^:: nil ) in
    let deserialize = Ocaml_protoc_plugin.Deserialize.deserialize (spec) constructor in
    fun writer -> deserialize writer
  
end
and RpcError : sig
  val name': unit -> string
  type t = { code: int; message: string; data: string } [@@deriving eq, show, protocol ~driver:(module Protocol_conv_json.Json)]
  val to_proto: t -> Ocaml_protoc_plugin.Writer.t
  val from_proto: Ocaml_protoc_plugin.Reader.t -> t Ocaml_protoc_plugin.Result.t
end = struct 
  let name' () = "Jsonrpc.RpcError"
  type t = { code: int; message: string; data: string } [@@deriving eq, show, protocol ~driver:(module Protocol_conv_json.Json)]
  let to_proto = 
    let apply = fun ~f:f' { code; message; data } -> f' code message data in
    let spec = Ocaml_protoc_plugin.Serialize.C.( basic (1, sint32_int, proto3) ^:: basic (2, string, proto3) ^:: basic (3, string, proto3) ^:: nil ) in
    let serialize = Ocaml_protoc_plugin.Serialize.serialize (spec) in
    fun t -> apply ~f:(serialize ()) t
  
  let from_proto = 
    let constructor = fun code message data -> { code; message; data } in
    let spec = Ocaml_protoc_plugin.Deserialize.C.( basic (1, sint32_int, proto3) ^:: basic (2, string, proto3) ^:: basic (3, string, proto3) ^:: nil ) in
    let deserialize = Ocaml_protoc_plugin.Deserialize.deserialize (spec) constructor in
    fun writer -> deserialize writer
  
end
and Result : sig
  val name': unit -> string
  type t = unit [@@deriving eq, show, protocol ~driver:(module Protocol_conv_json.Json)]
  val to_proto: t -> Ocaml_protoc_plugin.Writer.t
  val from_proto: Ocaml_protoc_plugin.Reader.t -> t Ocaml_protoc_plugin.Result.t
end = struct 
  let name' () = "Jsonrpc.Result"
  type t = unit [@@deriving eq, show, protocol ~driver:(module Protocol_conv_json.Json)]
  let to_proto = 
    let apply = fun ~f () -> f in
    let spec = Ocaml_protoc_plugin.Serialize.C.( nil ) in
    let serialize = Ocaml_protoc_plugin.Serialize.serialize (spec) in
    fun t -> apply ~f:(serialize ()) t
  
  let from_proto = 
    let constructor = () in
    let spec = Ocaml_protoc_plugin.Deserialize.C.( nil ) in
    let deserialize = Ocaml_protoc_plugin.Deserialize.deserialize (spec) constructor in
    fun writer -> deserialize writer
  
end
and Response : sig
  val name': unit -> string
  type t = { jsonrpc: string; id: string; error: RpcError.t option; result: [ `Empty of string | `KeymapGetResponse of Keymap.Keymap.GetResponse.t | `KeymapReloadResponse of Keymap.Keymap.ReloadResponse.t | `KeymapStoreResponse of Keymap.Keymap.StoreResponse.t | `FilerMakeResponse of Filer.Filer.MakeResponse.t | `FilerGetResponse of Filer.Filer.GetResponse.t | `FilerMoveParentResponse of Filer.Filer.MoveParentResponse.t | `FilerEnterDirectoryResponse of Filer.Filer.EnterDirectoryResponse.t | `FilerToggleMarkResponse of Filer.Filer.ToggleMarkResponse.t | `FilerMoveResponse of Filer.Filer.MoveResponse.t | `FilerDeleteResponse of Filer.Filer.DeleteResponse.t | `FilerCopyResponse of Filer.Filer.CopyResponse.t | `FilerJumpLocationResponse of Filer.Filer.JumpLocationResponse.t | `ConfigurationGetResponse of Configuration.Configuration.GetResponse.t | `ConfigurationStoreResponse of Configuration.Configuration.StoreResponse.t | `CompletionSetupResponse of Completion.Completion.SetupResponse.t | `CompletionReadResponse of Completion.Completion.ReadResponse.t | `BookmarkListAllResponse of Bookmark.Bookmark.ListAllResponse.t | `BookmarkRegisterResponse of Bookmark.Bookmark.RegisterResponse.t | `BookmarkDeleteResponse of Bookmark.Bookmark.DeleteResponse.t | `TaskSendReplyResponse of Task.Task.SendReplyResponse.t | `TaskCancelResponse of Task.Task.CancelResponse.t ] } [@@deriving eq, show, protocol ~driver:(module Protocol_conv_json.Json)]
  val to_proto: t -> Ocaml_protoc_plugin.Writer.t
  val from_proto: Ocaml_protoc_plugin.Reader.t -> t Ocaml_protoc_plugin.Result.t
end = struct 
  let name' () = "Jsonrpc.Response"
  type t = { jsonrpc: string; id: string; error: RpcError.t option; result: [ `Empty of string | `KeymapGetResponse of Keymap.Keymap.GetResponse.t | `KeymapReloadResponse of Keymap.Keymap.ReloadResponse.t | `KeymapStoreResponse of Keymap.Keymap.StoreResponse.t | `FilerMakeResponse of Filer.Filer.MakeResponse.t | `FilerGetResponse of Filer.Filer.GetResponse.t | `FilerMoveParentResponse of Filer.Filer.MoveParentResponse.t | `FilerEnterDirectoryResponse of Filer.Filer.EnterDirectoryResponse.t | `FilerToggleMarkResponse of Filer.Filer.ToggleMarkResponse.t | `FilerMoveResponse of Filer.Filer.MoveResponse.t | `FilerDeleteResponse of Filer.Filer.DeleteResponse.t | `FilerCopyResponse of Filer.Filer.CopyResponse.t | `FilerJumpLocationResponse of Filer.Filer.JumpLocationResponse.t | `ConfigurationGetResponse of Configuration.Configuration.GetResponse.t | `ConfigurationStoreResponse of Configuration.Configuration.StoreResponse.t | `CompletionSetupResponse of Completion.Completion.SetupResponse.t | `CompletionReadResponse of Completion.Completion.ReadResponse.t | `BookmarkListAllResponse of Bookmark.Bookmark.ListAllResponse.t | `BookmarkRegisterResponse of Bookmark.Bookmark.RegisterResponse.t | `BookmarkDeleteResponse of Bookmark.Bookmark.DeleteResponse.t | `TaskSendReplyResponse of Task.Task.SendReplyResponse.t | `TaskCancelResponse of Task.Task.CancelResponse.t ] } [@@deriving eq, show, protocol ~driver:(module Protocol_conv_json.Json)]
  let to_proto = 
    let apply = fun ~f:f' { jsonrpc; id; error; result } -> f' jsonrpc id error result in
    let spec = Ocaml_protoc_plugin.Serialize.C.( basic (1, string, proto3) ^:: basic (2, string, proto3) ^:: basic_opt (3, (message RpcError.to_proto)) ^:: oneof ((function `Empty v -> oneof_elem (4, string, v) | `KeymapGetResponse v -> oneof_elem (5, (message Keymap.Keymap.GetResponse.to_proto), v) | `KeymapReloadResponse v -> oneof_elem (6, (message Keymap.Keymap.ReloadResponse.to_proto), v) | `KeymapStoreResponse v -> oneof_elem (7, (message Keymap.Keymap.StoreResponse.to_proto), v) | `FilerMakeResponse v -> oneof_elem (8, (message Filer.Filer.MakeResponse.to_proto), v) | `FilerGetResponse v -> oneof_elem (9, (message Filer.Filer.GetResponse.to_proto), v) | `FilerMoveParentResponse v -> oneof_elem (10, (message Filer.Filer.MoveParentResponse.to_proto), v) | `FilerEnterDirectoryResponse v -> oneof_elem (11, (message Filer.Filer.EnterDirectoryResponse.to_proto), v) | `FilerToggleMarkResponse v -> oneof_elem (12, (message Filer.Filer.ToggleMarkResponse.to_proto), v) | `FilerMoveResponse v -> oneof_elem (13, (message Filer.Filer.MoveResponse.to_proto), v) | `FilerDeleteResponse v -> oneof_elem (14, (message Filer.Filer.DeleteResponse.to_proto), v) | `FilerCopyResponse v -> oneof_elem (15, (message Filer.Filer.CopyResponse.to_proto), v) | `FilerJumpLocationResponse v -> oneof_elem (16, (message Filer.Filer.JumpLocationResponse.to_proto), v) | `ConfigurationGetResponse v -> oneof_elem (17, (message Configuration.Configuration.GetResponse.to_proto), v) | `ConfigurationStoreResponse v -> oneof_elem (18, (message Configuration.Configuration.StoreResponse.to_proto), v) | `CompletionSetupResponse v -> oneof_elem (19, (message Completion.Completion.SetupResponse.to_proto), v) | `CompletionReadResponse v -> oneof_elem (20, (message Completion.Completion.ReadResponse.to_proto), v) | `BookmarkListAllResponse v -> oneof_elem (21, (message Bookmark.Bookmark.ListAllResponse.to_proto), v) | `BookmarkRegisterResponse v -> oneof_elem (22, (message Bookmark.Bookmark.RegisterResponse.to_proto), v) | `BookmarkDeleteResponse v -> oneof_elem (23, (message Bookmark.Bookmark.DeleteResponse.to_proto), v) | `TaskSendReplyResponse v -> oneof_elem (24, (message Task.Task.SendReplyResponse.to_proto), v) | `TaskCancelResponse v -> oneof_elem (25, (message Task.Task.CancelResponse.to_proto), v))) ^:: nil ) in
    let serialize = Ocaml_protoc_plugin.Serialize.serialize (spec) in
    fun t -> apply ~f:(serialize ()) t
  
  let from_proto = 
    let constructor = fun jsonrpc id error result -> { jsonrpc; id; error; result } in
    let spec = Ocaml_protoc_plugin.Deserialize.C.( basic (1, string, proto3) ^:: basic (2, string, proto3) ^:: basic_opt (3, (message RpcError.from_proto)) ^:: oneof ([ oneof_elem (4, string, fun v -> `Empty v); oneof_elem (5, (message Keymap.Keymap.GetResponse.from_proto), fun v -> `KeymapGetResponse v); oneof_elem (6, (message Keymap.Keymap.ReloadResponse.from_proto), fun v -> `KeymapReloadResponse v); oneof_elem (7, (message Keymap.Keymap.StoreResponse.from_proto), fun v -> `KeymapStoreResponse v); oneof_elem (8, (message Filer.Filer.MakeResponse.from_proto), fun v -> `FilerMakeResponse v); oneof_elem (9, (message Filer.Filer.GetResponse.from_proto), fun v -> `FilerGetResponse v); oneof_elem (10, (message Filer.Filer.MoveParentResponse.from_proto), fun v -> `FilerMoveParentResponse v); oneof_elem (11, (message Filer.Filer.EnterDirectoryResponse.from_proto), fun v -> `FilerEnterDirectoryResponse v); oneof_elem (12, (message Filer.Filer.ToggleMarkResponse.from_proto), fun v -> `FilerToggleMarkResponse v); oneof_elem (13, (message Filer.Filer.MoveResponse.from_proto), fun v -> `FilerMoveResponse v); oneof_elem (14, (message Filer.Filer.DeleteResponse.from_proto), fun v -> `FilerDeleteResponse v); oneof_elem (15, (message Filer.Filer.CopyResponse.from_proto), fun v -> `FilerCopyResponse v); oneof_elem (16, (message Filer.Filer.JumpLocationResponse.from_proto), fun v -> `FilerJumpLocationResponse v); oneof_elem (17, (message Configuration.Configuration.GetResponse.from_proto), fun v -> `ConfigurationGetResponse v); oneof_elem (18, (message Configuration.Configuration.StoreResponse.from_proto), fun v -> `ConfigurationStoreResponse v); oneof_elem (19, (message Completion.Completion.SetupResponse.from_proto), fun v -> `CompletionSetupResponse v); oneof_elem (20, (message Completion.Completion.ReadResponse.from_proto), fun v -> `CompletionReadResponse v); oneof_elem (21, (message Bookmark.Bookmark.ListAllResponse.from_proto), fun v -> `BookmarkListAllResponse v); oneof_elem (22, (message Bookmark.Bookmark.RegisterResponse.from_proto), fun v -> `BookmarkRegisterResponse v); oneof_elem (23, (message Bookmark.Bookmark.DeleteResponse.from_proto), fun v -> `BookmarkDeleteResponse v); oneof_elem (24, (message Task.Task.SendReplyResponse.from_proto), fun v -> `TaskSendReplyResponse v); oneof_elem (25, (message Task.Task.CancelResponse.from_proto), fun v -> `TaskCancelResponse v) ]) ^:: nil ) in
    let deserialize = Ocaml_protoc_plugin.Deserialize.deserialize (spec) constructor in
    fun writer -> deserialize writer
  
end